interface NcRegItem {
  name: string,
  reg: string
}

const NcRegExp: NcRegItem[] = [
  {
    name: '字母',
    reg: '[a-zA-Z]+'
  },
  {
    name: '数字',
    reg: '[0-9]+'
  },
  {
    name: '汉字',
    reg: '[\u4E00-\u9FA5]+'
  },
  {
    name: '身份证',
    reg: '(^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$)|(^[1-9]\\d{5}\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{2}$)',
  },
  {
    name: '手机号',
    reg: '1([38][0-9]|4[579]|5[012356789]|66|7[1235678]|9[189])[0-9]{8}'
  },
  {
    name: '邮箱',
    reg: "(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*"
  },
  {
    name: 'IP',
    reg: '(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'
  },
  {
    name: 'IPV4',
    reg: '(?!\.)((^|\.)([1-9]?\d|1\d\d|2(5[0-5]|[0-4]\d))){4}'
  },
  {
    name: 'IPV6',
    reg: '\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*'
  },
  {
    name: '数字、点、英文逗号',
    reg: '[0-9.,]+'
  },
  {
    name: '字符!@#$%^&*_',
    reg: '[!@#$%^&*_]+'
  },
  {
    name: '字母或数字',
    reg: '[0-9a-zA-Z]+'
  },
  {
    name: '不包含汉字',
    reg: '[^\u4e00-\u9fa5]+'
  },
  {
    name: '字母、数字或.!@#$%^&*_',
    reg: '[0-9a-zA-Z.!@#$%^&*_]+'
  },
  {
    name: '字母、数字、汉字或空格',
    reg: '[0-9a-zA-Z\u4e00-\u9fa5 ]+'
  },
  {
    name: 'URL地址',
    reg: '((ht|f)tps?):\/\/[\w\-]+(\.[\w\-]+)+([\w\-.,@?^=%&:\/~+#]*[\w\-@?^=%&\/~+#])?'
  },
  {
    name: 'MAC地址',
    reg: '[a-fA-F0-9]{2}(-[a-fA-F0-9]{2}){5}$|^[a-fA-F0-9]{2}(:[a-fA-F0-9]{2}){5}$|^[a-fA-F0-9]{12}$|^[a-fA-F0-9]{4}(\.[a-fA-F0-9]{4}){2}',
  }
];

// 根据传入的正则表达式名称获取表达式内容
export const ncGetPattern = (name: string): NcRegItem => NcRegExp.find(d => d.name === name) || {name: '', reg: ''};
